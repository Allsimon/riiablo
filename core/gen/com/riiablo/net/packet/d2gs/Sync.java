// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.d2gs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Sync extends Table {
  public static Sync getRootAsSync(ByteBuffer _bb) { return getRootAsSync(_bb, new Sync()); }
  public static Sync getRootAsSync(ByteBuffer _bb, Sync obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Sync __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int entityId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public byte dataType(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int dataTypeLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer dataTypeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer dataTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public Table data(Table obj, int j) { int o = __offset(8); return o != 0 ? __union(obj, __vector(o) + j * 4 - bb_pos) : null; }
  public int dataLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createSync(FlatBufferBuilder builder,
      int entityId,
      int data_typeOffset,
      int dataOffset) {
    builder.startObject(3);
    Sync.addData(builder, dataOffset);
    Sync.addDataType(builder, data_typeOffset);
    Sync.addEntityId(builder, entityId);
    return Sync.endSync(builder);
  }

  public static void startSync(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addEntityId(FlatBufferBuilder builder, int entityId) { builder.addInt(0, entityId, 0); }
  public static void addDataType(FlatBufferBuilder builder, int dataTypeOffset) { builder.addOffset(1, dataTypeOffset, 0); }
  public static int createDataTypeVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startDataTypeVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(2, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSync(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

