// automatically generated by the FlatBuffers compiler, do not modify

package com.riiablo.net.packet.d2gs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Ping extends Table {
  public static Ping getRootAsPing(ByteBuffer _bb) { return getRootAsPing(_bb, new Ping()); }
  public static Ping getRootAsPing(ByteBuffer _bb, Ping obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Ping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int tickCount() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public long time() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createPing(FlatBufferBuilder builder,
      int tickCount,
      long time) {
    builder.startObject(2);
    Ping.addTime(builder, time);
    Ping.addTickCount(builder, tickCount);
    return Ping.endPing(builder);
  }

  public static void startPing(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addTickCount(FlatBufferBuilder builder, int tickCount) { builder.addInt(0, tickCount, 0); }
  public static void addTime(FlatBufferBuilder builder, long time) { builder.addLong(1, time, 0L); }
  public static int endPing(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

